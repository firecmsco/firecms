---
// ScrollSyncShowcase.astro
// A two-column scroll-sync section with a sticky index on the left
// Uses Tailwind classes available in the site. Pure placeholders.
---

<section id="scroll-sync-showcase" class="relative isolate bg-black py-24 sm:py-28 border-b border-gray-800">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <div class="flex gap-12 lg:gap-16">
      <!-- Left: Sticky index -->
      <aside class="hidden lg:block w-[300px] flex-shrink-0">
        <nav class="sticky top-28">
          <div class="mb-4 text-xs uppercase tracking-wide text-gray-400">On this section</div>
          <ol class="space-y-3">
            <li>
              <a href="#screen-1" data-index-item class="group block" data-active="false">
                <div class="flex items-center gap-3 pl-3 py-1 border-l border-transparent group-data-[active=true]:border-primary transition-colors">
                  <span class="h-1.5 w-1.5 rounded-full bg-white/30 group-data-[active=true]:bg-primary flex-shrink-0"></span>
                  <span class="text-lg md:text-xl text-gray-300 group-data-[active=true]:text-white group-data-[active=true]:font-semibold">AI Assist</span>
                </div>
                <div class="overflow-hidden transition-all duration-300 ease-out group-data-[active=false]:max-h-0 group-data-[active=true]:max-h-40">
                  <p class="text-sm text-gray-400 pl-3 pt-2 pb-1 opacity-0 group-data-[active=true]:opacity-100 transition-opacity duration-300 delay-75">Intelligent assistance powered by AI to enhance your workflow and productivity.</p>
                </div>
              </a>
            </li>
            <li>
              <a href="#screen-2" data-index-item class="group block" data-active="false">
                <div class="flex items-center gap-3 pl-3 py-1 border-l border-transparent group-data-[active=true]:border-primary transition-colors">
                  <span class="h-1.5 w-1.5 rounded-full bg-white/30 group-data-[active=true]:bg-primary flex-shrink-0"></span>
                  <span class="text-lg md:text-xl text-gray-300 group-data-[active=true]:text-white group-data-[active=true]:font-semibold">Visual Builder</span>
                </div>
                <div class="overflow-hidden transition-all duration-300 ease-out group-data-[active=false]:max-h-0 group-data-[active=true]:max-h-40">
                  <p class="text-sm text-gray-400 pl-3 pt-2 pb-1 opacity-0 group-data-[active=true]:opacity-100 transition-opacity duration-300 delay-75">Build beautiful interfaces with drag-and-drop simplicity and real-time previews.</p>
                </div>
              </a>
            </li>
            <li>
              <a href="#screen-3" data-index-item class="group block" data-active="false">
                <div class="flex items-center gap-3 pl-3 py-1 border-l border-transparent group-data-[active=true]:border-primary transition-colors">
                  <span class="h-1.5 w-1.5 rounded-full bg-white/30 group-data-[active=true]:bg-primary flex-shrink-0"></span>
                  <span class="text-lg md:text-xl text-gray-300 group-data-[active=true]:text-white group-data-[active=true]:font-semibold">CMS & Data</span>
                </div>
                <div class="overflow-hidden transition-all duration-300 ease-out group-data-[active=false]:max-h-0 group-data-[active=true]:max-h-40">
                  <p class="text-sm text-gray-400 pl-3 pt-2 pb-1 opacity-0 group-data-[active=true]:opacity-100 transition-opacity duration-300 delay-75">Manage your content and data with a powerful, flexible CMS built for scale.</p>
                </div>
              </a>
            </li>
            <li>
              <a href="#screen-4" data-index-item class="group block" data-active="false">
                <div class="flex items-center gap-3 pl-3 py-1 border-l border-transparent group-data-[active=true]:border-primary transition-colors">
                  <span class="h-1.5 w-1.5 rounded-full bg-white/30 group-data-[active=true]:bg-primary flex-shrink-0"></span>
                  <span class="text-lg md:text-xl text-gray-300 group-data-[active=true]:text-white group-data-[active=true]:font-semibold">Collaboration</span>
                </div>
                <div class="overflow-hidden transition-all duration-300 ease-out group-data-[active=false]:max-h-0 group-data-[active=true]:max-h-40">
                  <p class="text-sm text-gray-400 pl-3 pt-2 pb-1 opacity-0 group-data-[active=true]:opacity-100 transition-opacity duration-300 delay-75">Work together seamlessly with real-time updates and team communication tools.</p>
                </div>
              </a>
            </li>
          </ol>
        </nav>
      </aside>

      <!-- Right: Content area with fixed size (can overflow) -->
      <div class="flex-1 min-w-0">
        <div class="w-full lg:w-[1240px] space-y-32">
      <!-- Screen 1 -->
      <section id="screen-1" data-screen class="scroll-mt-32 will-change-transform">
        <div class="mb-4 text-base md:text-lg font-semibold leading-6 text-teal-400">Section 1</div>
        <h3 class="text-3xl md:text-4xl font-semibold tracking-tight text-white mb-5">Placeholder: AI Assist</h3>
        <p class="text-gray-400 mb-8">High-level description for the first screen. Replace with your own content, imagery or demos.</p>
        <div class="relative rounded-2xl p-[1px] bg-linear-to-br from-white/10 via-white/5 to-transparent">
          <div class="relative rounded-2xl overflow-hidden ring-1 ring-white/10 bg-gray-950">
            <div class="absolute -top-24 -right-24 h-72 w-72 rounded-full bg-primary/10 blur-3xl"></div>
            <div class="w-full h-[720px] bg-gray-900 flex items-center justify-center">
              <div class="text-gray-500">[ Placeholder graphic / video ]</div>
            </div>
          </div>
        </div>
      </section>

      <!-- Screen 2 -->
      <section id="screen-2" data-screen class="scroll-mt-32 will-change-transform">
        <div class="mb-4 text-base md:text-lg font-semibold leading-6 text-teal-400">Section 2</div>
        <h3 class="text-3xl md:text-4xl font-semibold tracking-tight text-white mb-5">Placeholder: Visual Builder</h3>
        <p class="text-gray-400 mb-8">Describe the second capability or surface. Include a short value prop and add a visual mock.</p>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 h-[720px]">
          <div class="relative rounded-xl p-[1px] bg-linear-to-br from-white/10 via-white/5 to-transparent">
            <div class="relative rounded-xl overflow-hidden ring-1 ring-white/10 bg-gray-950 h-full flex items-center justify-center">
              <span class="text-gray-500">[ UI Shot A ]</span>
            </div>
          </div>
          <div class="relative rounded-xl p-[1px] bg-linear-to-br from-white/10 via-white/5 to-transparent">
            <div class="relative rounded-xl overflow-hidden ring-1 ring-white/10 bg-gray-950 h-full flex items-center justify-center">
              <span class="text-gray-500">[ UI Shot B ]</span>
            </div>
          </div>
        </div>
      </section>

      <!-- Screen 3 -->
      <section id="screen-3" data-screen class="scroll-mt-32 will-change-transform">
        <div class="mb-4 text-base md:text-lg font-semibold leading-6 text-teal-400">Section 3</div>
        <h3 class="text-3xl md:text-4xl font-semibold tracking-tight text-white mb-5">Placeholder: CMS & Data</h3>
        <p class="text-gray-400 mb-8">Show a table view, list, or any data-oriented visualization. Keep it simple for now.</p>
        <div class="relative overflow-hidden rounded-xl ring-1 ring-white/10 bg-gray-950 h-[720px]">
          <div class="absolute -top-28 -left-20 h-72 w-72 rounded-full bg-primary/10 blur-3xl"></div>
          <div class="p-4 sm:p-6 h-full overflow-auto">
            <div class="w-full">
              <table class="min-w-full text-sm">
                <thead class="text-gray-400 border-b border-white/10">
                  <tr>
                    <th class="py-3 pr-4 text-left font-semibold">Name</th>
                    <th class="py-3 pr-4 text-left font-semibold">Status</th>
                    <th class="py-3 pr-4 text-left font-semibold">Updated</th>
                  </tr>
                </thead>
                <tbody class="divide-y divide-white/5 text-gray-300">
                  <tr>
                    <td class="py-3 pr-4">Item Alpha</td>
                    <td class="py-3 pr-4"><span class="inline-flex items-center rounded-md bg-emerald-500/10 px-2 py-1 text-xs font-medium text-emerald-400 ring-1 ring-inset ring-emerald-500/20">Active</span></td>
                    <td class="py-3 pr-4">2 days ago</td>
                  </tr>
                  <tr>
                    <td class="py-3 pr-4">Item Beta</td>
                    <td class="py-3 pr-4"><span class="inline-flex items-center rounded-md bg-yellow-500/10 px-2 py-1 text-xs font-medium text-yellow-400 ring-1 ring-inset ring-yellow-500/20">Pending</span></td>
                    <td class="py-3 pr-4">Yesterday</td>
                  </tr>
                  <tr>
                    <td class="py-3 pr-4">Item Gamma</td>
                    <td class="py-3 pr-4"><span class="inline-flex items-center rounded-md bg-gray-500/10 px-2 py-1 text-xs font-medium text-gray-300 ring-1 ring-inset ring-white/10">Draft</span></td>
                    <td class="py-3 pr-4">Just now</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </section>

      <!-- Screen 4 -->
      <section id="screen-4" data-screen class="scroll-mt-32 will-change-transform">
        <div class="mb-4 text-base md:text-lg font-semibold leading-6 text-teal-400">Section 4</div>
        <h3 class="text-3xl md:text-4xl font-semibold tracking-tight text-white mb-5">Placeholder: Collaboration</h3>
        <p class="text-gray-400 mb-8">Demonstrate how teams collaborate. Use avatars and a simple comment stream.</p>
        <div class="relative rounded-2xl p-[1px] bg-linear-to-br from-white/10 via-white/5 to-transparent">
          <div class="relative rounded-2xl overflow-hidden ring-1 ring-white/10 bg-gray-950 h-[720px]">
            <div class="p-4 sm:p-6 space-y-4 h-full overflow-auto">
              <div class="flex items-center gap-3">
                <div class="h-8 w-8 rounded-full bg-gradient-to-br from-fuchsia-500 to-indigo-500"></div>
                <div>
                  <div class="text-sm font-medium text-white">Alex</div>
                  <div class="text-xs text-gray-400">Left a comment</div>
                </div>
              </div>
              <div class="rounded-lg border border-white/10 bg-gray-900 p-4 text-gray-300">Great direction! Let's add a filter by date range on this view.</div>
              <div class="flex items-center gap-3">
                <div class="h-8 w-8 rounded-full bg-gradient-to-br from-cyan-500 to-emerald-500"></div>
                <div>
                  <div class="text-sm font-medium text-white">Sam</div>
                  <div class="text-xs text-gray-400">Replied</div>
                </div>
              </div>
              <div class="rounded-lg border border-white/10 bg-gray-900 p-4 text-gray-300">On it! Drafting an update now.</div>
            </div>
          </div>
        </div>
      </section>
        </div>
      </div>
    </div>
  </div>

  <script>
    const root = document.getElementById('scroll-sync-showcase');
    const screens = (root?.querySelectorAll('[data-screen]') as NodeListOf<HTMLElement>) || null;
    const indexItems = (root?.querySelectorAll('[data-index-item]') as NodeListOf<HTMLAnchorElement>) || null;

    if (screens && indexItems) {
      const byId = new Map<string, HTMLAnchorElement>();
      indexItems.forEach((a) => {
        const id = a.getAttribute('href')?.replace('#', '') || '';
        if (id) byId.set(id, a);
        a.addEventListener('click', (e) => {
          e.preventDefault();
          const target = document.getElementById(id);
          if (target) target.scrollIntoView({ behavior: 'smooth', block: 'start' });
        });
      });

      const activate = (id: string) => {
        indexItems.forEach((a) => a.setAttribute('data-active', 'false'));
        const el = byId.get(id);
        if (el) el.setAttribute('data-active', 'true');
      };

      // Keep IO for index activation only
      const io = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) activate(entry.target.id);
          });
        },
        { rootMargin: '-30% 0px -50% 0px', threshold: [0.1, 0.25, 0.5] }
      );
      screens.forEach((s) => io.observe(s));

      // Scroll-bound animation
      const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
      const maxOffsetPx = 32; // slide distance
      const minOpacity = 0.25; // ensure minimum opacity is not 0 for subtlety

      const clamp = (v: number, min: number, max: number): number => Math.max(min, Math.min(max, v));

      const update = () => {
        const vh = window.innerHeight || 1;
        const start = vh * 0.2;
        const end = vh * 0.6;
        const span = Math.max(1, end - start);

        screens.forEach((s) => {
          const rect = s.getBoundingClientRect();
          if (prefersReduced) {
            s.style.opacity = '1';
            s.style.transform = 'translate3d(0,0,0)';
            return;
          }
          // progress 0..1 based on section top moving from start to end
          const p = clamp((end - rect.top) / span, 0, 1);
          const tx = (1 - p) * maxOffsetPx;
          const op = minOpacity + p * (1 - minOpacity);
          s.style.opacity = String(op);
          s.style.transform = `translate3d(${tx}px, 0, 0)`;
        });
      };

      let ticking = false;
      const requestTick = () => {
        if (ticking) return;
        ticking = true;
        requestAnimationFrame(() => {
          update();
          ticking = false;
        });
      };

      window.addEventListener('scroll', requestTick, { passive: true });
      window.addEventListener('resize', requestTick);
      // Initial paint
      requestTick();
    }
  </script>
</section>
