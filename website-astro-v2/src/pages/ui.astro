---
import Layout from '../layouts/Layout.astro';
import ClientUIComponentsShowcase from '../components/ClientUIComponentsShowcase.tsx';

const title = "FireCMS UI Components - Beautiful, Accessible React Components";
const description = "Explore the FireCMS UI component library - a comprehensive collection of beautiful, accessible React components built for modern web applications.";
---

<Layout title={title} description={description}>

  <main>
    <!-- Hero Section -->
    <section class="relative isolate overflow-hidden bg-linear-to-br from-black to-gray-900 pt-24 pb-16 sm:pt-32 sm:pb-24 lg:pt-40 lg:pb-24 border-b border-gray-800">
      <div class="absolute inset-x-0 -top-40 -z-10 transform-gpu overflow-hidden blur-3xl sm:-top-80" aria-hidden="true">
        <div class="blob-shape relative left-[calc(50%-11rem)] aspect-1155/678 w-144.5 -translate-x-2/3 rotate-30 bg-linear-to-tr from-primary to-blue-900 opacity-15 sm:left-[calc(50%-30rem)] sm:w-288.75"></div>
      </div>

      <div class="px-4 mx-auto max-w-7xl text-center lg:px-12">
        <h1 class="mb-8 text-5xl font-extrabold tracking-tight leading-none md:text-6xl text-white font-sans">
          FireCMS <span class="text-orange-500">UI Components</span>
        </h1>
        <p class="mb-10 text-lg leading-8 text-gray-300 lg:text-xl sm:px-16 xl:px-48">
          A comprehensive collection of <b>beautiful, accessible React components</b> built for modern web applications.
        </p>
      </div>

      <div class="absolute inset-x-0 top-[calc(100%-13rem)] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[calc(100%-30rem)]" aria-hidden="true">
        <div class="blob-shape relative left-[calc(50%+3rem)] aspect-1155/678 w-144.5 -translate-x-1/2 bg-linear-to-tr from-primary to-blue-900 opacity-10 sm:left-[calc(50%+36rem)] sm:w-288.75"></div>
      </div>
    </section>

    <!-- UI Components Showcase Section -->
    <section class="bg-black py-16 sm:py-24">
      <div class="mx-auto max-w-7xl px-6 lg:px-8">
        <div id="showcase-container" class="relative min-h-[600px]">
          <!-- Loading indicator -->
          <div id="showcase-loading" class="absolute inset-0 flex flex-col items-center justify-center gap-4">
            <div class="relative w-16 h-16">
              <div class="absolute inset-0 border-4 border-gray-800 rounded-full"></div>
              <div class="absolute inset-0 border-4 border-orange-500 rounded-full border-t-transparent animate-spin"></div>
            </div>
            <p class="text-gray-400 text-lg">Loading UI Components...</p>
          </div>

          <ClientUIComponentsShowcase client:only="react" docsUrl="https://firecms.co" linksInNewTab={true} />
        </div>
      </div>
    </section>

    <script>
      // Hide loading indicator once the component is visible
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const container = entry.target;
            // Check if component has rendered by looking for its content
            const checkLoaded = setInterval(() => {
              const hasContent = container.querySelector('.max-w-6xl');
              if (hasContent) {
                const loader = document.getElementById('showcase-loading');
                if (loader) {
                  loader.style.opacity = '0';
                  loader.style.transition = 'opacity 0.3s ease-out';
                  setTimeout(() => loader.remove(), 300);
                }
                clearInterval(checkLoaded);
                observer.disconnect();
              }
            }, 100);

            // Fallback: remove loader after 3 seconds anyway
            setTimeout(() => {
              clearInterval(checkLoaded);
              const loader = document.getElementById('showcase-loading');
              if (loader) loader.remove();
            }, 3000);
          }
        });
      });

      const container = document.getElementById('showcase-container');
      if (container) observer.observe(container);
    </script>

  </main>

</Layout>

