---
import Panel from "../../Panel.astro";

interface Props {
    value: "self-hosted" | "cloud";
}

const { value = "cloud" } = Astro.props;
---

<Panel color={"white"} innerClassName={"flex flex-row gap-8 justify-center"}>
    <div
        data-value="self-hosted"
        class:list={[
            "toggle-button cursor-pointer max-w-sm p-6 border border-solid rounded-lg flex flex-row gap-4 items-center bg-gray-50",
            value === "self-hosted" ? "border-transparent shadow-xl text-gray-700 outline-none ring-2 ring-primary ring-opacity-75 ring-offset-2 ring-offset-transparent" : "border-gray-200 text-gray-600"
        ]}
    >
        <img src="/img/icons/server.svg" alt="Self hosted" class="w-8 h-8"/>
        <div class="flex flex-col">
            <h3 class="text-xl md:text-2xl font-bold mb-0">Self-hosted</h3>
            <p class="text-lg mb-0"><b>FREE</b> and open source</p>
        </div>
    </div>
    <div
        data-value="cloud"
        class:list={[
            "toggle-button cursor-pointer max-w-sm p-6 border border-solid rounded-lg flex flex-row gap-4 items-center bg-gray-50",
            value === "cloud" ? "border-transparent shadow-xl text-gray-700 outline-none ring-2 ring-primary ring-opacity-75 ring-offset-2 ring-offset-transparent" : "border-gray-200 text-gray-600"
        ]}
    >
        <img src="/img/icons/cloud.svg" alt="Cloud" class="w-8 h-8"/>
        <div class="flex flex-col">
            <h3 class="text-xl md:text-2xl font-bold mb-0">Cloud</h3>
            <p class="text-lg mb-0">No-code, full-service</p>
        </div>
    </div>
</Panel>

<script>
    document.addEventListener('astro:page-load', () => {
        const buttons = document.querySelectorAll('.toggle-button');
        const selectedClasses = ['border-transparent', 'shadow-xl', 'text-gray-700', 'outline-none', 'ring-2', 'ring-primary', 'ring-opacity-75', 'ring-offset-2', 'ring-offset-transparent'];
        const unselectedClasses = ['border-gray-200', 'text-gray-600'];

        buttons.forEach(button => {
            button.addEventListener('click', () => {
                const selectedValue = button.getAttribute('data-value');

                buttons.forEach(btn => {
                    if (btn.getAttribute('data-value') === selectedValue) {
                        btn.classList.add(...selectedClasses);
                        btn.classList.remove(...unselectedClasses);
                    } else {
                        btn.classList.remove(...selectedClasses);
                        btn.classList.add(...unselectedClasses);
                    }
                });

                const event = new CustomEvent('version-change', { detail: { value: selectedValue } });
                document.dispatchEvent(event);
            });
        });
    });
</script>