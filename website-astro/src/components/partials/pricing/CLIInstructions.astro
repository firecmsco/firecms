---
import Panel from "../../Panel.astro";
import AppLink from "../../AppLink.astro";
import { CTACaret, CTAOutlinedButtonMixin } from "../../../migration/partials/styles";

interface Props {
    analyticsLabel: string;
}

const { analyticsLabel } = Astro.props;
---

<Panel color={"light"}
      includeMargin={false}
      includePadding={true}>

    <h2 class={"mb-3 uppercase font-mono"}>
        Start hacking today
    </h2>

    <p class={"text-lg"}>
        Use our <b>CLI</b> to get started right away.
    </p>

    <p class={"text-lg"}>
        By using the CLI to initialize
        your project, you can customize your CMS in multiple ways, including <b>custom form
        fields</b>, <b>actions</b>, <b>views</b>, <b>custom business logic</b> and <b>authentication</b>.
    </p>

    <p class={"text-lg"}>
        This way you can create a CMS tailored to your needs.
    </p>

    <div class={"flex gap-4 items-center flex-col md:flex-row"}>

        <div
            class={"select-all font-mono text-gray-800 p-4 px-6 bg-gray-100 border-gray-300 border-solid w-fit text-md font-bold inline-flex rounded-md"}>
            npx create-firecms-app
        </div>
        or
        <div
            class={"select-all font-mono text-gray-800 p-4 px-6 bg-gray-100 border-gray-300 border-solid w-fit text-md font-bold inline-flex rounded-md"}>
            yarn create firecms-app
        </div>

        <a
            class:list={[CTAOutlinedButtonMixin]}
            href="/docs/"
        >
            Docs
            <Fragment set:html={CTACaret} />
        </a>
    </div>
    <div class={"mt-2"}>
        <AppLink href={"https://app.firecms.co"}
           target={"_blank"}
           rel={"noopener noreferrer"}
           id={`cli_instructions_cta_${analyticsLabel}`}
        >
            Projects in FireCMS Cloud are initiated within the app.
        </AppLink>
    </div>
</Panel>

<script define:vars={{ analyticsLabel }}>
    document.addEventListener('astro:page-load', () => {
        const element = document.getElementById(`cli_instructions_cta_${analyticsLabel}`);
        if (element) {
            element.addEventListener('click', () => {
                if (window.gtag) {
                    window.gtag("event", "go_to_app", {
                        event_category: analyticsLabel,
                        event_label: "cli_instructions"
                    });
                }
            });
        }
    });
</script>