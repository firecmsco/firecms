---
import Panel from "../../Panel.astro";
import LinedSpace from "../layout/LinedSpace.astro";
import { ContainerInnerPaddingMixin, CTACaret, CTAOutlinedButtonMixin, defaultBorderMixin } from "../../../migration/partials/styles";
import { gridIcon } from "../../../migration/partials/icons";

const iconStars = `<svg
    class="w-16 h-16 p-1 "
    viewBox="0 0 64 64"
    xmlns="http://www.w3.org/2000/svg"
>
    <g fill="none" fill-rule="evenodd">
        <rect
            class="fill-current text-primary"
            width="64"
            height="64"
            rx="32"
        />
        <g stroke-width="2">
            <path
                class="stroke-current text-white"
                d="M32 37.714A5.714 5.714 0 0037.714 32a5.714 5.714 0 005.715 5.714"
            />
            <path
                class="stroke-current text-white"
                d="M32 37.714a5.714 5.714 0 015.714 5.715 5.714 5.714 0 015.715-5.715M20.571 26.286a5.714 5.714 0 005.715-5.715A5.714 5.714 0 0032 26.286"
            />
            <path
                class="stroke-current text-white"
                d="M20.571 26.286A5.714 5.714 0 0126.286 32 5.714 5.714 0 0132 26.286"
            />
            <path
                class="stroke-current text-blue-300"
                d="M21.714 40h4.572M24 37.714v4.572M37.714 24h4.572M40 21.714v4.572"
                stroke-linecap="square"
            />
        </g>
    </g>
</svg>`;

const iconDoor = `<svg
    class="w-16 h-16 p-1 "
    viewBox="0 0 64 64"
    xmlns="http://www.w3.org/2000/svg"
>
    <g fill="none" fill-rule="evenodd">
        <rect
            class="fill-current text-primary"
            width="64"
            height="64"
            rx="32"
        />
        <g transform="translate(22.857 19.429)"
           stroke-width="2">
            <path
                class="stroke-current text-white"
                stroke-linecap="square"
                d="M12.571 4.571V0H0v25.143h12.571V20.57"
            />
            <path
                class="stroke-current text-white"
                d="M16 12.571h8"
            />
            <path
                class="stroke-current text-white"
                stroke-linecap="square"
                d="M19.429 8L24 12.571l-4.571 4.572"
            />
            <circle
                class="stroke-current text-blue-300"
                stroke-linecap="square"
                cx="12.571"
                cy="12.571"
                r="3.429"
            />
        </g>
    </g>
</svg>`;

const iconCards = `<svg
    class="w-16 h-16 p-1 "
    viewBox="0 0 64 64"
    xmlns="http://www.w3.org/2000/svg"
>
    <g fill="none" fill-rule="evenodd">
        <rect
            class="fill-current text-primary"
            width="64"
            height="64"
            rx="32"
        />
        <g stroke-linecap="square" stroke-width="2">
            <path
                class="stroke-current text-white"
                d="M20.571 20.571h13.714v17.143H20.571z"
            />
            <path
                class="stroke-current text-blue-300"
                d="M38.858 26.993l6.397 1.73-4.473 16.549-13.24-3.58"
            />
        </g>
    </g>
</svg>`;

const iconArrows = `<svg
    class="w-16 h-16 p-1 "
    viewBox="0 0 64 64"
    xmlns="http://www.w3.org/2000/svg"
>
    <g fill="none" fill-rule="evenodd">
        <rect
            class="fill-current text-primary"
            width="64"
            height="64"
            rx="32"
        />
        <g stroke-width="2">
            <path
                class="stroke-current text-blue-300"
                d="M34.514 35.429l2.057 2.285h8M20.571 26.286h5.715l2.057 2.285"
            />
            <path
                class="stroke-current text-white"
                d="M20.571 37.714h5.715L36.57 26.286h8"
            />
            <path
                class="stroke-current text-blue-300"
                stroke-linecap="square"
                d="M41.143 34.286l3.428 3.428-3.428 3.429"
            />
            <path
                class="stroke-current text-white"
                stroke-linecap="square"
                d="M41.143 29.714l3.428-3.428-3.428-3.429"
            />
        </g>
    </g>
</svg>`;

const iconRadar = `<svg
    class="w-16 h-16 p-1 "
    viewBox="0 0 64 64"
    xmlns="http://www.w3.org/2000/svg"
>
    <g fill="none" fill-rule="evenodd">
        <rect
            class="fill-current text-primary"
            width="64"
            height="64"
            rx="32"
        />
        <g stroke-width="2"
           transform="translate(19.429 20.571)">
            <circle
                class="stroke-current text-white"
                stroke-linecap="square"
                cx="12.571"
                cy="12.571"
                r="1.143"
            />
            <path
                class="stroke-current text-white"
                d="M19.153 23.267c3.59-2.213 5.99-6.169 5.99-10.696C25.143 5.63 19.514 0 12.57 0 5.63 0 0 5.629 0 12.571c0 4.527 2.4 8.483 5.99 10.696"
            />
            <path
                class="stroke-current text-blue-300"
                d="M16.161 18.406a6.848 6.848 0 003.268-5.835 6.857 6.857 0 00-6.858-6.857 6.857 6.857 0 00-6.857 6.857 6.848 6.848 0 003.268 5.835"
            />
        </g>
    </g>
</svg>`;
---

<Panel
    color={"light"}
    includePadding={false}
    container={false}
>
    <LinedSpace size={"large"}/>

    <div
        data-aos="fade-up"
        class={"flex items-center mb-4"}
    >
        <div class={"w-full"}>
            <p class:list={["max-w-6xl mx-auto text-xl md:text-2xl py-4"]}>
                FireCMS provides all the flexibility you
                need with the best UX.
                Edit your collections and entities using
                both a <b>spreadsheet
                view</b> and <b>powerful forms</b>.
            </p>
        </div>
    </div>

    <div
        class={"max-w-6xl flex flex-col lg:items-center gap-4 md:grid md:grid-cols-2 lg:grid-cols-3 lg:w-full lg:mx-auto p-4"}>
        <div
            class:list={["bg-white relative flex flex-col items-center p-6 rounded-2xl border border-solid", defaultBorderMixin]}>
            <Fragment set:html={iconStars} />
            <h4 class="text-xl font-bold leading-snug tracking-tight mt-2 mb-0 text-center">
                Automatic Schema Inference
            </h4>
            <p class="text-center">
                FireCMS will
                automatically infer the data structure
                and types for you.
            </p>
        </div>

        <div
            class:list={["bg-white relative flex flex-col items-center p-6 rounded-2xl border border-solid", defaultBorderMixin]}>
            <Fragment set:html={gridIcon} />
            <h4 class="text-xl font-bold leading-snug tracking-tight mt-2 mb-0 text-center">
                Sophisticated Editing Tools
            </h4>
            <p class="text-center">
                Spreadsheet-style editing, robust forms,
                file storage, entity references...
            </p>
        </div>

        <div
            class:list={["bg-white relative flex flex-col items-center p-6 rounded-2xl border border-solid", defaultBorderMixin]}>
            <Fragment set:html={iconDoor} />
            <h4 class="text-xl font-bold leading-snug tracking-tight mt-2 mb-0 text-center">
                Role-Based System
            </h4>
            <p class="text-center">
                Configure app settings according to the logged-in
                user
            </p>
        </div>

        <div
            class:list={["bg-white relative flex flex-col items-center p-6 rounded-2xl border border-solid", defaultBorderMixin]}>
            <Fragment set:html={iconCards} />
            <h4 class="text-xl font-bold leading-snug tracking-tight mt-2 mb-0 text-center">
                Flexible Customization
            </h4>
            <p class="text-center">
                Incorporate custom form fields, hooks, and full views based on React
            </p>
        </div>
        <div
            class:list={["bg-white relative flex flex-col items-center p-6 rounded-2xl border border-solid", defaultBorderMixin]}>
            <Fragment set:html={iconArrows} />
            <h4 class="text-xl font-bold leading-snug tracking-tight mt-2 mb-0 text-center">
                Subcollection Compatibility
            </h4>
            <p class="text-center">
                Seamless navigation for collections within other entities
            </p>
        </div>

        <div
            class:list={["bg-white relative flex flex-col items-center p-6 rounded-2xl border border-solid", defaultBorderMixin]}>
            <Fragment set:html={iconRadar} />
            <h4 class="text-xl font-bold leading-snug tracking-tight mt-2 mb-0 text-center">
                Real-Time Support
            </h4>
            <p class="text-center">
                Live updates in every view of your CMS, ideal for background updates
            </p>
        </div>
    </div>

    <div
        class="max-w-3xl mx-auto text-center py-8 md:py-12">
        <a
            class:list={[CTAOutlinedButtonMixin, "mx-auto"]}
            href="/features/"
        >
            See all features
            <Fragment set:html={CTACaret} />
        </a>
    </div>

    <LinedSpace size={"larger"} position={"top"}/>
</Panel>